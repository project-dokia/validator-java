{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/feedback/feedback.component.css","webpack:///./src/app/feedback/feedback.component.html","webpack:///./src/app/feedback/feedback.component.ts","webpack:///./src/app/field/field.component.css","webpack:///./src/app/field/field.component.html","webpack:///./src/app/field/field.component.ts","webpack:///./src/app/history/history.component.css","webpack:///./src/app/history/history.component.html","webpack:///./src/app/history/history.component.ts","webpack:///./src/app/model/model.component.css","webpack:///./src/app/model/model.component.html","webpack:///./src/app/model/model.component.ts","webpack:///./src/app/rule/rule.component.css","webpack:///./src/app/rule/rule.component.html","webpack:///./src/app/rule/rule.component.ts","webpack:///./src/app/type/type.component.css","webpack:///./src/app/type/type.component.html","webpack:///./src/app/type/type.component.ts","webpack:///./src/app/validator/validator.component.css","webpack:///./src/app/validator/validator.component.html","webpack:///./src/app/validator/validator.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/model/document.ts","webpack:///./src/model/field-rule.ts","webpack:///./src/model/field.ts","webpack:///./src/model/input.ts","webpack:///./src/model/model.ts","webpack:///./src/model/rule.ts","webpack:///./src/model/type.ts","webpack:///./src/service/feedback.service.ts","webpack:///./src/service/field.service.ts","webpack:///./src/service/interceptor.module.ts","webpack:///./src/service/model.service.ts","webpack:///./src/service/rule.service.ts","webpack:///./src/service/sync.service.ts","webpack:///./src/service/type.service.ts","webpack:///./src/service/validator.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TypeComponent } from './type/type.component';\nimport { FieldComponent } from './field/field.component';\nimport { AppComponent } from './app.component';\nimport { RuleComponent } from './rule/rule.component';\nimport { ValidatorComponent } from './validator/validator.component';\nimport { ModelComponent } from './model/model.component';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { HistoryComponent } from './history/history.component';\n\n\nconst routes: Routes = [\n  { path: 'type', component: TypeComponent },\n  { path: 'field', component: FieldComponent },\n  { path: 'rule', component: RuleComponent },\n  { path: 'model', component: ModelComponent },\n  { path: 'validator', component: ValidatorComponent },\n  { path: 'tickets', component: FeedbackComponent },\n  { path: 'tickets/history', component: HistoryComponent },\n  { path: '', component: ValidatorComponent }\n];\n\n@NgModule({\n  exports: [RouterModule ],\n  imports: [RouterModule.forRoot(routes)]\n})\nexport class AppRoutingModule {}\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/validator\\\">Dok.IA Rules</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\"\\n    aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/type\\\">Type</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/model\\\">Model</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/field\\\">Field</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/rule\\\">Rule</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/validator\\\">Validator</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/tickets\\\">Tickets</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <strong class=\\\" mr-sm-2 white\\\">Last update {{lastSync}}</strong>\\n    <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\" type=\\\"button\\\" (click)=\\\"sync();\\\">Sync</button>\\n  </form>\\n</nav>\\n\\n<div class=\\\"container-fluid\\\">\\n  <router-outlet></router-outlet>\\n\\n  <div class=\\\"holder\\\" [hidden]=\\\"count == 0\\\">\\n\\n    <div class=\\\"loader-wrapper\\\">\\n      <div class=\\\"loader\\\">\\n        <div class=\\\"roller\\\"></div>\\n        <div class=\\\"roller\\\"></div>\\n      </div>\\n\\n      <div id=\\\"loader2\\\" class=\\\"loader\\\">\\n        <div class=\\\"roller\\\"></div>\\n        <div class=\\\"roller\\\"></div>\\n      </div>\\n\\n      <div id=\\\"loader3\\\" class=\\\"loader\\\">\\n        <div class=\\\"roller\\\"></div>\\n        <div class=\\\"roller\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"/*\\n* Infinite Loader \\n*\\n* Author: Jonathan Silva\\n* Url: https://portfolio.jonathansilva.com.br\\n*\\n*/\\n/* ----- Base ----- */\\n.white {\\n  color: white; }\\n.holder {\\n  position: absolute;\\n  left: 0px;\\n  top: 0px;\\n  bottom: 0px;\\n  right: 0px;\\n  width: 100%;\\n  height: 100%;\\n  opacity: 0.5;\\n  background-color: #7a7a7a; }\\n/* ----- Loader ----- */\\n.loader-wrapper {\\n  width: 148px;\\n  height: 100px;\\n  position: absolute !important;\\n  margin: -50px 0 0 -74px;\\n  left: 50%;\\n  top: 60%; }\\n.loader {\\n  width: 148px;\\n  height: 100px;\\n  top: 0;\\n  left: 0;\\n  position: absolute; }\\n.loader:after {\\n    content: \\\"\\\";\\n    top: auto;\\n    position: absolute;\\n    display: block;\\n    -webkit-animation: shadow 1.2s infinite linear;\\n            animation: shadow 1.2s infinite linear;\\n    -moz-animation: shadow 1.2s infinite linear;\\n    bottom: 0em;\\n    left: 0;\\n    height: .25em;\\n    width: 1em;\\n    border-radius: 50%;\\n    opacity: 0.3; }\\n.roller,\\n.roller:last-child {\\n  width: 70px;\\n  height: 70px;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  -webkit-animation: rollercoaster 1.2s infinite linear;\\n  -webkit-transform: rotate(135deg);\\n  -moz-animation: rollercoaster 1.2s infinite linear;\\n  -moz-transform: rotate(135deg);\\n  animation: rollercoaster 1.2s infinite linear;\\n  transform: rotate(135deg); }\\n.roller:last-child {\\n  left: auto;\\n  right: 0;\\n  -webkit-transform: rotate(-45deg);\\n  -webkit-animation: rollercoaster2 1.2s infinite linear;\\n  -moz-transform: rotate(-45deg);\\n  -moz-animation: rollercoaster2 1.2s infinite linear;\\n  transform: rotate(-45deg);\\n  animation: rollercoaster2 1.2s infinite linear; }\\n.roller:before,\\n.roller:last-child:before {\\n  content: \\\"\\\";\\n  display: block;\\n  width: 15px;\\n  height: 15px;\\n  position: absolute !important;\\n  background: #000;\\n  opacity: 1 !important;\\n  border-radius: 50%; }\\n@-webkit-keyframes rollercoaster {\\n  0% {\\n    -webkit-transform: rotate(135deg); }\\n  8% {\\n    -webkit-transform: rotate(240deg); }\\n  20% {\\n    -webkit-transform: rotate(300deg); }\\n  40% {\\n    -webkit-transform: rotate(380deg); }\\n  45% {\\n    -webkit-transform: rotate(440deg); }\\n  50% {\\n    -webkit-transform: rotate(495deg);\\n    opacity: 1; }\\n  50.1% {\\n    -webkit-transform: rotate(495deg);\\n    opacity: 0; }\\n  100% {\\n    -webkit-transform: rotate(495deg);\\n    opacity: 0; } }\\n@-webkit-keyframes rollercoaster2 {\\n  0% {\\n    opacity: 0; }\\n  49.9% {\\n    opacity: 0; }\\n  50% {\\n    opacity: 1;\\n    -webkit-transform: rotate(-45deg); }\\n  58% {\\n    -webkit-transform: rotate(-160deg); }\\n  70% {\\n    -webkit-transform: rotate(-240deg); }\\n  80% {\\n    -webkit-transform: rotate(-300deg); }\\n  90% {\\n    -webkit-transform: rotate(-340deg); }\\n  100% {\\n    -webkit-transform: rotate(-405deg); } }\\n@-webkit-keyframes shadow {\\n  0% {\\n    opacity: .3;\\n    -webkit-transform: translateX(65px) scale(0.5, 0.5); }\\n  8% {\\n    -webkit-transform: translateX(30px) scale(2, 2); }\\n  13% {\\n    -webkit-transform: translateX(0px) scale(1.3, 1.3); }\\n  30% {\\n    -webkit-transform: translateX(-15px) scale(0.5, 0.5);\\n    opacity: 0.1; }\\n  50% {\\n    -webkit-transform: translateX(60px) scale(1.2, 1.2);\\n    opacity: 0.3; }\\n  60% {\\n    -webkit-transform: translateX(130px) scale(2, 2);\\n    opacity: 0.05; }\\n  65% {\\n    -webkit-transform: translateX(145px) scale(1.2, 1.2); }\\n  80% {\\n    -webkit-transform: translateX(120px) scale(0.5, 0.5);\\n    opacity: 0.1; }\\n  90% {\\n    -webkit-transform: translateX(80px) scale(0.8, 0.8); }\\n  100% {\\n    -webkit-transform: translateX(60px);\\n    opacity: 0.3; } }\\n/* Moz */\\n/* No-prefix */\\n@keyframes rollercoaster {\\n  0% {\\n    -webkit-transform: rotate(135deg);\\n            transform: rotate(135deg); }\\n  8% {\\n    -webkit-transform: rotate(240deg);\\n            transform: rotate(240deg); }\\n  20% {\\n    -webkit-transform: rotate(300deg);\\n            transform: rotate(300deg); }\\n  40% {\\n    -webkit-transform: rotate(380deg);\\n            transform: rotate(380deg); }\\n  45% {\\n    -webkit-transform: rotate(440deg);\\n            transform: rotate(440deg); }\\n  50% {\\n    -webkit-transform: rotate(495deg);\\n            transform: rotate(495deg);\\n    opacity: 1; }\\n  50.1% {\\n    -webkit-transform: rotate(495deg);\\n            transform: rotate(495deg);\\n    opacity: 0; }\\n  100% {\\n    -webkit-transform: rotate(495deg);\\n            transform: rotate(495deg);\\n    opacity: 0; } }\\n@keyframes rollercoaster2 {\\n  0% {\\n    opacity: 0; }\\n  49.9% {\\n    opacity: 0; }\\n  50% {\\n    opacity: 1;\\n    -webkit-transform: rotate(-45deg);\\n            transform: rotate(-45deg); }\\n  58% {\\n    -webkit-transform: rotate(-160deg);\\n            transform: rotate(-160deg); }\\n  70% {\\n    -webkit-transform: rotate(-240deg);\\n            transform: rotate(-240deg); }\\n  80% {\\n    -webkit-transform: rotate(-300deg);\\n            transform: rotate(-300deg); }\\n  90% {\\n    -webkit-transform: rotate(-340deg);\\n            transform: rotate(-340deg); }\\n  100% {\\n    -webkit-transform: rotate(-405deg);\\n            transform: rotate(-405deg); } }\\n@keyframes shadow {\\n  0% {\\n    opacity: .3;\\n    -webkit-transform: translateX(65px) scale(0.5, 0.5);\\n            transform: translateX(65px) scale(0.5, 0.5); }\\n  8% {\\n    -webkit-transform: translateX(30px) scale(2, 2);\\n            transform: translateX(30px) scale(2, 2); }\\n  13% {\\n    -webkit-transform: translateX(0px) scale(1.3, 1.3);\\n            transform: translateX(0px) scale(1.3, 1.3); }\\n  30% {\\n    -webkit-transform: translateX(-15px) scale(0.5, 0.5);\\n            transform: translateX(-15px) scale(0.5, 0.5);\\n    opacity: 0.1; }\\n  50% {\\n    -webkit-transform: translateX(60px) scale(1.2, 1.2);\\n            transform: translateX(60px) scale(1.2, 1.2);\\n    opacity: 0.3; }\\n  60% {\\n    -webkit-transform: translateX(130px) scale(2, 2);\\n            transform: translateX(130px) scale(2, 2);\\n    opacity: 0.05; }\\n  65% {\\n    -webkit-transform: translateX(145px) scale(1.2, 1.2);\\n            transform: translateX(145px) scale(1.2, 1.2); }\\n  80% {\\n    -webkit-transform: translateX(120px) scale(0.5, 0.5);\\n            transform: translateX(120px) scale(0.5, 0.5);\\n    opacity: 0.1; }\\n  90% {\\n    -webkit-transform: translateX(80px) scale(0.8, 0.8);\\n            transform: translateX(80px) scale(0.8, 0.8); }\\n  100% {\\n    -webkit-transform: translateX(60px);\\n            transform: translateX(60px);\\n    opacity: 0.3; } }\\n#loader2:after {\\n  -webkit-animation-delay: 0.15s;\\n  animation-delay: 0.15s; }\\n#loader2 .roller {\\n  -webkit-animation-delay: 0.15s;\\n  animation-delay: 0.15s; }\\n#loader3:after {\\n  -webkit-animation-delay: 0.3s;\\n  animation-delay: 0.3s; }\\n#loader3 .roller {\\n  -webkit-animation-delay: 0.3s;\\n  animation-delay: 0.3s; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HTTPStatus } from '../service/interceptor.module';\nimport { SyncService } from '../service/sync.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [SyncService]\n})\nexport class AppComponent {\n  title = 'app';\n  count = 1;\n  HTTPActivity: boolean;\n  lastSync:String;\n\n  constructor(\n    private syncService: SyncService,\n    private httpStatus: HTTPStatus, \n    private _router: Router) {\n    this.httpStatus.getHttpStatus()\n      .subscribe((status: boolean) => {\n        this.HTTPActivity = status;\n        if (status) this.count++;\n        else this.count--;\n      });\n  }\n\n  ngOnInit() {\n    this.getLastSyncObservable();\n  }\n\n  public sync() {\n    this.syncService.syncObservable()\n    .subscribe(res => {\n      alert(\"Syncronized!\");\n      this.getLastSyncObservable();\n    }, err => {\n      console.log(err);\n    })\n  }\n\n  public getLastSyncObservable() {\n    this.syncService.getLastSyncObservable()\n    .subscribe(res => {\n      let response : any;\n      response = res;\n\n      if(response.lastSync != undefined && response.lastSync != null && response.lastSync != \"null\") {\n        this.lastSync = response.lastSync;\n      } else {\n        this.lastSync = \"SINCRONIZAR - URGENTE\";\n      }\n      \n    }, err => {\n      console.log(err);\n    })\n  }\n\n  currentUrl() {\n\n    console.log(this._router.url);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TypeComponent } from './type/type.component';\nimport { FieldComponent } from './field/field.component';\nimport { HttpClientModule } from '@angular/common/http'; \nimport { AppRoutingModule } from './app-routing.module';\nimport { RuleComponent } from './rule/rule.component';\nimport { ValidatorComponent } from './validator/validator.component';\nimport { FormsModule } from '@angular/forms';\nimport { ModelComponent } from './model/model.component';\n\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { NgbModalModule, NgbModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpsRequestInterceptor, HTTPStatus } from '../service/interceptor.module';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { HistoryComponent } from './history/history.component';\n\nconst RxJS_Services = [HttpsRequestInterceptor, HTTPStatus];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TypeComponent,\n    FieldComponent,\n    RuleComponent,\n    FeedbackComponent,\n    HistoryComponent,\n    ValidatorComponent,\n    ModelComponent,\n  ],\n  imports: [\n    NgbModule.forRoot(),\n    BrowserModule,\n    NgbModalModule,\n    AngularFontAwesomeModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [RxJS_Services\n    , {\n        provide: HTTP_INTERCEPTORS,\n        useClass: HttpsRequestInterceptor,\n        multi: true\n    },],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".gap-top20 {\\n    margin-top: 20px;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row gap-top20\\\">\\n        <div class=\\\"col-2 offset-10\\\">\\n                <input type=\\\"button\\\" value=\\\"History\\\" class=\\\"btn btn-dark form-control\\\" routerLink=\\\"/tickets/history\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row gap-top20\\\">\\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                    <input type=\\\"button\\\" value=\\\"IA\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"viewTableIA()\\\">\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                    <input type=\\\"button\\\" value=\\\"OCR\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"viewOCRTable()\\\">\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                    <input type=\\\"button\\\" value=\\\"Regras\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"viewRegTablRegra()\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row gap-top20\\\">\\n        <div class=\\\"col-12\\\">\\n            <table class=\\\"table table-horvered table-striped\\\">\\n                <thead>\\n                    <tr>\\n                        <th>Type</th>\\n                        <th>Correct Comment</th>\\n                        <th>Wrong Comment</th>\\n                        <th>Date</th>\\n                        <th>Action</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n\\n                    <ng-container *ngIf=\\\"viewIA\\\">\\n                        <tr *ngFor=\\\"let feedback of feedbacksIA\\\">\\n                            <td>IA</td>\\n                            <td>{{feedback.comentario_correto}}</td>\\n                            <td>{{feedback.comentario_errado}}</td>\\n                            <td>{{feedback.dt_consulta}}</td>\\n                            <td>\\n                                <input type=\\\"button\\\" value=\\\"UPDATE\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"updateStatus(content, feedback.id)\\\">\\n                            </td>\\n                        </tr>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"viewOCR\\\">\\n                        <tr *ngFor=\\\"let feedback of feedbacksOCR\\\">\\n                            <td>OCR</td>\\n                            <td>{{feedback.comentario_correto}}</td>\\n                            <td>{{feedback.comentario_errado}}</td>\\n                            <td>{{feedback.dt_consulta}}</td>\\n                            <td>\\n                                <input type=\\\"button\\\" value=\\\"UPDATE\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"updateStatus(content, feedback.id)\\\">\\n                            </td>\\n                        </tr>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"viewRegra\\\">\\n                        <tr *ngFor=\\\"let feedback of feedbacksRegra\\\">\\n                            <td>REGRA</td>\\n                            <td>{{feedback.comentario_correto}}</td>\\n                            <td>{{feedback.comentario_errado}}</td>\\n                            <td>{{feedback.dt_consulta}}</td>\\n                            <td>\\n                                <input type=\\\"button\\\" value=\\\"UPDATE\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"updateStatus(content, feedback.id)\\\">\\n                            </td>\\n                        </tr>\\n                    </ng-container>\\n\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n\\n    <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Update Status</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12\\\">\\n                    <h5>What do you did?</h5>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12\\\">\\n                    <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"comment\\\"> -->\\n                    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"comment\\\" rows=\\\"10\\\" id=\\\"comment\\\"></textarea>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" id=\\\"close\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateFeedback()\\\">Update Status</button>\\n        </div>\\n    </ng-template>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FeedbackService } from '../../service/feedback.service';\nimport { Feedback } from '../../model/feedback';\nimport { NgbModal } from '../../../node_modules/@ng-bootstrap/ng-bootstrap';\n\n@Component({\n    selector: 'app-type',\n    templateUrl: './feedback.component.html',\n    styleUrls: ['./feedback.component.css'],\n    providers: [FeedbackService]\n    //   TypeService\n})\nexport class FeedbackComponent implements OnInit {\n\n    constructor(\n        private feedbackService: FeedbackService,\n        private modalService: NgbModal,\n    ) { }\n\n    feedbacks: Feedback[];\n\n    feedbacksIA: Feedback[];\n    feedbacksOCR: Feedback[];\n    feedbacksRegra: Feedback[];\n\n    viewIA: boolean;\n    viewOCR: boolean;\n    viewRegra: boolean;\n\n    comment: string;\n\n    id: string;\n\n\n    ngOnInit() {\n        this.feedbacks = new Array<Feedback>();\n        this.getAllFeedbacks();\n\n        this.viewIA = true;\n        this.viewOCR = false;\n        this.viewRegra = false;\n\n        this.comment = \"\";\n    }\n\n    public viewTableIA() {\n        this.viewIA = !this.viewIA;\n        this.viewOCR = false;\n        this.viewRegra = false;\n    }\n    public viewOCRTable() {\n        this.viewOCR = !this.viewOCR;\n        this.viewIA = false;\n        this.viewRegra = false;\n    }\n    public viewRegTablRegra() {\n        this.viewRegra = !this.viewRegra;\n        this.viewIA = false;\n        this.viewOCR = false;\n    }\n\n    private getAllFeedbacks() {\n        this.feedbackService.getFeedbacksObservable().\n            subscribe((res: Array<Feedback>) => {\n                this.feedbacks = new Array<Feedback>();\n                this.feedbacksIA = new Array<Feedback>();\n                this.feedbacksOCR = new Array<Feedback>();\n                this.feedbacksRegra = new Array<Feedback>();\n                this.feedbacks = res;\n                // console.log(this.feedbacks);\n\n                for (let feedback of this.feedbacks) {\n                    if (feedback.erro_id == \"1\") {\n                        this.feedbacksIA.push(feedback);\n                    } else if (feedback.erro_id == \"2\") {\n                        this.feedbacksOCR.push(feedback);\n                    } else if (feedback.erro_id == \"3\") {\n                        this.feedbacksRegra.push(feedback);\n                    }\n                }\n\n            });\n    }\n\n    public updateStatus(content, id) {\n        this.id = id;\n        this.modalService.open(content, { centered: true, size: 'lg' });\n    }\n\n    public updateFeedback() {\n        // comentario ainda nao esta implantado :(\n\n        this.feedbackService.updateStatus(this.id).subscribe((res: Object) => {\n            alert(\"Updated\");\n\n            let close = document.getElementById(\"close\");\n            close.click();\n\n            this.getAllFeedbacks();\n        });\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <!-- <h4 class=\\\"card-title\\\">Type</h4>   -->\\n  <div class=\\\"card m-2\\\">\\n    <div class=\\\"card-body\\\">\\n      <h4 class=\\\"card-text\\\">Cadatro</h4>\\n      <div class=\\\"row m-2\\\">\\n        <div class=\\\"col-3 text-right\\\">\\n          <h5>Type</h5>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"field.idType\\\">\\n            <option *ngFor=\\\"let type of types\\\" value=\\\"{{type._id}}\\\">{{type.description}}</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"row m-2\\\">\\n        <div class=\\\"col-3 text-right\\\">\\n          <h5>Model</h5>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"field.idModel\\\">\\n            <option *ngFor=\\\"let model of models\\\" value=\\\"{{model._id}}\\\">{{model.description}}</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"row m-2\\\" *ngIf=\\\"verifyIdType(field.idType)\\\">\\n        <div class=\\\"col-3 text-right\\\">\\n          <h5>Percentage</h5>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"field.percentage\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"row m-2\\\">\\n        <div class=\\\"col-3 text-right\\\">\\n          <h5>Title</h5>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"field.title\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"row m-2\\\">\\n        <div class=\\\"col-3 text-right\\\">\\n          <h5>Need Other ID?</h5>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"field.needOtherId\\\">\\n            <option value=\\\"false\\\">NO</option>\\n            <option value=\\\"true\\\">YES</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"row m-2\\\" *ngIf=\\\"verify(field.needOtherId)\\\">\\n        <div class=\\\"col-3 text-right\\\">\\n          <h5>Other ID</h5>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"field.otherId\\\">\\n            <option *ngFor=\\\"let field of fields\\\" value=\\\"{{field._id}}\\\">{{field.title}}</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"row m-2\\\">\\n        <div class=\\\"col-3 text-right\\\">\\n          <h5>Dependency</h5>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"field.dependency\\\">\\n            <option value=\\\"false\\\">NO</option>\\n            <option value=\\\"true\\\">YES</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"row m-2\\\" *ngIf=\\\"verify(field.dependency)\\\">\\n        <div class=\\\"col-3 text-right\\\">\\n          <h5>Dependency ID</h5>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"field.idDependency\\\">\\n            <option *ngFor=\\\"let field of fields\\\" value=\\\"{{field._id}}\\\">{{field.title}}</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"row m-2\\\">\\n        <div class=\\\"col-3 text-right\\\">\\n          <h5>Important</h5>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n          <td class=\\\"text-center\\\">\\n            <label>\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"field.important\\\" class=\\\"gap-top5\\\"> Yes</label>\\n          </td>\\n        </div>\\n      </div>\\n      <div class=\\\"row m-2\\\">\\n        <div class=\\\"col-6 offset-6 text-right\\\">\\n          <input type=\\\"button\\\" value=\\\"INSERT\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"insertField()\\\">\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <hr/>\\n\\n  <div class=\\\"card m-2\\\">\\n    <div class=\\\"card-body\\\">\\n      <h4 class=\\\"card-text\\\">List Fields</h4>\\n      <hr/>\\n      <div class=\\\"row m-2\\\">\\n        <div class=\\\"col-12\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped table-horvered \\\">\\n              <thead>\\n                <tr>\\n                  <!-- <th>_id</th> -->\\n                  <th>Title</th>\\n                  <th>Model</th>\\n                  <!-- <th>Need Other ID?</th> -->\\n                  <th>Type</th>\\n                  <th>Title</th>\\n                  <th>Model</th>\\n                  <th>Percentage</th>\\n                  <!-- <th>Dependency</th> -->\\n                  <!-- <th>Dependency ID</th> -->\\n                  <th>Important</th>\\n                  <th>Edit</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let field of fieldsSelected\\\">\\n                  <!-- <td>{{field._id}}</td> -->\\n                  <td>{{field.title}}</td>\\n                  <td>{{field.titleModel}}</td>\\n                  <!-- <td>{{field.needOtderId}}</td> -->\\n                  <td>{{field.titleType}}</td>\\n                  <td>{{field.titleId}}</td>\\n                  <td>{{field.titleModelId}}</td>\\n                  <td>{{field.percentage == 100 || field.percentage == 0 ? '' : field.percentage}}</td>\\n                  <td>{{field.important == undefined || field.important == false ? 'NO' : 'YES'}}</td>\\n\\n                  <!-- <td>{{field.dependency}}</td> -->\\n                  <!-- <td>{{field.idDependency}}</td> -->\\n                  <td>\\n                    <i class=\\\"fa fa-2x fa-edit click\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"modifyField(content, field._id)\\\"></i>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"card-body\\\">\\n      <h4 class=\\\"card-text\\\">List (Nenhum)\\n      </h4>\\n      <hr/>\\n      <div class=\\\"row m-2\\\">\\n        <div class=\\\"col-12\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped table-horvered \\\">\\n              <thead>\\n                <tr>\\n                  <!-- <th>_id</th> -->\\n                  <th>Title</th>\\n                  <th>Model</th>\\n                  <!-- <th>Need Other ID?</th> -->\\n                  <th>Type</th>\\n                  <!-- <th>Title</th> -->\\n                  <!-- <th>Model</th> -->\\n                  <!-- <th>Percentage</th> -->\\n                  <!-- <th>Dependency</th> -->\\n                  <!-- <th>Dependency ID</th> -->\\n\\n                  <th>Edit</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let field of fieldsNenhum\\\">\\n                  <!-- <td>{{field._id}}</td> -->\\n                  <td>{{field.title}}</td>\\n                  <td>{{field.titleModel}}</td>\\n                  <!-- <td>{{field.needOtderId}}</td> -->\\n                  <td>{{field.titleType}}</td>\\n                  <!-- <td>{{field.titleId}}</td> -->\\n                  <!-- <td>{{field.titleModelId}}</td> -->\\n                  <!-- <td>{{field.percentage}}</td> -->\\n                  <!-- <td>{{field.dependency}}</td> -->\\n                  <!-- <td>{{field.idDependency}}</td> -->\\n                  <td>\\n                    <i class=\\\"fa fa-2x fa-edit click\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"modifyField(content, field._id)\\\"></i>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Update Field</h4>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <div class=\\\"row m-2\\\">\\n            <div class=\\\"col-3 text-right\\\">\\n              <h5>Type</h5>\\n            </div>\\n            <div class=\\\"col-9\\\">\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"fieldEdit.idType\\\">\\n                <option *ngFor=\\\"let type of types\\\" value=\\\"{{type._id}}\\\">{{type.description}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"row m-2\\\">\\n            <div class=\\\"col-3 text-right\\\">\\n              <h5>Model</h5>\\n            </div>\\n            <div class=\\\"col-9\\\">\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"fieldEdit.idModel\\\">\\n                <option *ngFor=\\\"let model of models\\\" value=\\\"{{model._id}}\\\">{{model.description}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"row m-2\\\" *ngIf=\\\"verifyIdType(fieldEdit.idType)\\\">\\n            <div class=\\\"col-3 text-right\\\">\\n              <h5>Percentage</h5>\\n            </div>\\n            <div class=\\\"col-9\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"fieldEdit.percentage\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row m-2\\\">\\n            <div class=\\\"col-3 text-right\\\">\\n              <h5>Title</h5>\\n            </div>\\n            <div class=\\\"col-9\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"fieldEdit.title\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row m-2\\\">\\n            <div class=\\\"col-3 text-right\\\">\\n              <h5>Need Other ID?</h5>\\n            </div>\\n            <div class=\\\"col-9\\\">\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"fieldEdit.needOtherId\\\">\\n                <option value=\\\"false\\\">NO</option>\\n                <option value=\\\"true\\\">YES</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"row m-2\\\" *ngIf=\\\"verify(fieldEdit.needOtherId)\\\">\\n            <div class=\\\"col-3 text-right\\\">\\n              <h5>Other ID</h5>\\n            </div>\\n            <div class=\\\"col-9\\\">\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"fieldEdit.otherId\\\">\\n                <option *ngFor=\\\"let field of fields\\\" value=\\\"{{field._id}}\\\">{{field.title}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"row m-2\\\">\\n            <div class=\\\"col-3 text-right\\\">\\n              <h5>Dependency</h5>\\n            </div>\\n            <div class=\\\"col-9\\\">\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"fieldEdit.dependency\\\">\\n                <option value=\\\"false\\\">NO</option>\\n                <option value=\\\"true\\\">YES</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"row m-2\\\" *ngIf=\\\"verify(fieldEdit.dependency)\\\">\\n            <div class=\\\"col-3 text-right\\\">\\n              <h5>Dependency ID</h5>\\n            </div>\\n            <div class=\\\"col-9\\\">\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"fieldEdit.idDependency\\\">\\n                <option *ngFor=\\\"let field of fields\\\" value=\\\"{{fieldEdit._id}}\\\">{{fieldEdit.title}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"row m-2\\\">\\n            <div class=\\\"col-3 text-right\\\">\\n              <h5>Important</h5>\\n            </div>\\n            <div class=\\\"col-9\\\">\\n              <td class=\\\"text-center\\\">\\n                <label>\\n                  <input type=\\\"checkbox\\\" [(ngModel)]=\\\"fieldEdit.important\\\" class=\\\"gap-top5\\\"> Yes</label>\\n              </td>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-light\\\" id=\\\"close\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateField()\\\">Update</button>\\n    </div>\\n  </ng-template>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FieldService } from '../../service/field.service';\nimport { Field } from '../../model/field';\nimport { Type } from '../../model/type';\nimport { TypeService } from '../../service/type.service';\nimport { Model } from '../../model/model';\nimport { ModelService } from '../../service/model.service';\n\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-field',\n  templateUrl: './field.component.html',\n  styleUrls: ['./field.component.css'],\n  providers: [FieldService, ModelService, TypeService]\n})\nexport class FieldComponent implements OnInit {\n\n  constructor(\n    private fieldService: FieldService,\n    private typeService: TypeService,\n    private modelService: ModelService,\n    private modalService: NgbModal,\n  ) { }\n\n  fields: Field[];\n  fieldsNenhum: Field[];\n  fieldsSelected: Field[];\n  types: Type[];\n  models: Model[];\n\n  field: Field;\n  fieldEdit: Field;\n  ngOnInit() {\n    this.getAllFields();\n\n  }\n\n  private getAllModels() {\n    if (this.models.length == 0) {\n      this.modelService.getModelsObservable().\n        subscribe((res: Array<Model>) => {\n          this.models = new Array<Model>();\n          this.models = res;\n\n          this.setModels();\n        });\n    } else {\n      this.setModels();\n    }\n  }\n\n  private getAllTypes() {\n    if (this.types.length == 0) {\n      this.typeService.getTypesObservable().\n        subscribe((res: Array<Type>) => {\n          this.types = new Array<Type>();\n          this.types = res;\n\n          this.setFields();\n        });\n    } else {\n      this.setTypes();\n    }\n  }\n\n  public verifyIdType(idType) {\n    for (const type of this.types) {\n      if (type._id == idType) {\n        if (type.description == \"Equals\") {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n  }\n\n  public verify(response) {\n    if (String(response) == 'true') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private setModels() {\n    for (let field of this.fields) {\n      for (let model of this.models) {\n        if (model._id == field.idModel) {\n          field.titleModel = model.description;\n        }\n      }\n    }\n\n    for (let fieldTop of this.fields) {\n      for (let field of this.fields) {\n        if (field.otherId == fieldTop._id) {\n          for (let model of this.models) {\n            if (model._id == fieldTop.idModel) {\n              field.titleModelId = model.description;\n            }\n          }\n        }\n      }\n    }\n\n\n    this.setTypes();\n  }\n\n  private setTypes() {\n    let count = 0;\n    for (let field of this.fields) {\n      for (let type of this.types) {\n        if (type._id == field.idType) {\n          this.fields[count].titleType = type.description;\n        }\n      }\n      count++;\n    }\n\n    this.fieldsNenhum = new Array<Field>();\n    this.fieldsSelected = new Array<Field>();\n\n    for (let field of this.fields) {\n      if (field.titleType == \"Nenhum\") {\n        this.fieldsNenhum.push(field);\n      } else {\n        this.fieldsSelected.push(field);\n      }\n    }\n  }\n\n  private setFields() {\n    for (let field of this.fields) {\n      for (let otherField of this.fields) {\n        if (otherField._id == field.otherId) {\n          field.titleId = otherField.title;\n        }\n      }\n    }\n\n    this.getAllModels();\n\n  }\n\n  private getAllFields() {\n\n    this.field = new Field();\n    this.models = new Array<Model>();\n    this.fields = new Array<Field>();\n    this.types = new Array<Type>();\n\n    this.field.type = \"FIELD\";\n\n    if (this.fields.length == 0) {\n      this.fieldService.getFieldsObservable().\n        subscribe((res: Array<Field>) => {\n          this.fields = new Array<Field>();\n          this.fields = res;\n\n\n          this.getAllTypes();\n        });\n    } else {\n      this.setFields();\n    }\n  }\n\n  public insertField() {\n    this.fieldService.insertFieldObservable(this.field).subscribe((res: Object) => {\n      alert(\"Inserido\");\n      this.getAllFields();\n\n      this.field = new Field();\n      this.field.type = \"FIELD\";\n    })\n  }\n\n  closeResult: string;\n\n  public updateField() {\n    this.fieldService.updateField(this.fieldEdit)\n      .subscribe(res => {\n        let close = document.getElementById(\"close\");\n        close.click();\n\n        this.getAllFields();\n      },\n        err => {\n          console.log(err);\n        });\n  }\n\n  public modifyField(content, _id) {\n\n    this.fieldService.getFieldByIdObservable(_id)\n      .subscribe(field => {\n        this.fieldEdit = new Field;\n        this.fieldEdit = field;\n        this.modalService.open(content, { centered: true, size: 'lg' });\n      })\n\n\n  }\n}\n","module.exports = \".gap-top20 {\\n    margin-top: 20px;\\n}\"","module.exports = \"<div class=\\\"container-fluid gap-top20\\\">\\n\\n    <div class=\\\"row gap-top20\\\">\\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                    <input type=\\\"button\\\" value=\\\"IA\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"viewTableIA()\\\">\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                    <input type=\\\"button\\\" value=\\\"OCR\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"viewOCRTable()\\\">\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                    <input type=\\\"button\\\" value=\\\"Regras\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"viewRegTablRegra()\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row gap-top20\\\">\\n        <div class=\\\"col-12\\\">\\n            <table class=\\\"table table-horvered table-striped\\\">\\n                <thead>\\n                    <tr>\\n                        <th>Type</th>\\n                        <th>Correct Comment</th>\\n                        <th>Wrong Comment</th>\\n                        <th>Date</th>\\n                        <th>Status</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <ng-container *ngIf=\\\"viewIA\\\">\\n                        <tr *ngFor=\\\"let feedback of feedbacksIA\\\">\\n                            <td>IA</td>\\n                            <td>{{feedback.comentario_correto}}</td>\\n                            <td>{{feedback.comentario_errado}}</td>\\n                            <td>{{feedback.dt_consulta}}</td>\\n                            <td>Solved</td>\\n                        </tr>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"viewOCR\\\">\\n                        <tr *ngFor=\\\"let feedback of feedbacksOCR\\\">\\n                            <td>OCR</td>\\n                            <td>{{feedback.comentario_correto}}</td>\\n                            <td>{{feedback.comentario_errado}}</td>\\n                            <td>{{feedback.dt_consulta}}</td>\\n                            <td>Solved</td>\\n                        </tr>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"viewRegra\\\">\\n                        <tr *ngFor=\\\"let feedback of feedbacksRegra\\\">\\n                            <td>REGRA</td>\\n                            <td>{{feedback.comentario_correto}}</td>\\n                            <td>{{feedback.comentario_errado}}</td>\\n                            <td>{{feedback.dt_consulta}}</td>\\n                            <td>Solved</td>\\n                        </tr>\\n                    </ng-container>\\n\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FeedbackService } from '../../service/feedback.service';\nimport { Feedback } from '../../model/feedback';\nimport { NgbModal } from '../../../node_modules/@ng-bootstrap/ng-bootstrap';\n\n@Component({\n    selector: 'app-type',\n    templateUrl: './history.component.html',\n    styleUrls: ['./history.component.css'],\n    providers: [FeedbackService]\n    //   TypeService\n})\nexport class HistoryComponent implements OnInit {\n\n    constructor(\n        private feedbackService: FeedbackService,\n        private modalService: NgbModal,\n    ) { }\n\n    feedbacks: Feedback[];\n\n    feedbacksIA: Feedback[];\n    feedbacksOCR: Feedback[];\n    feedbacksRegra: Feedback[];\n\n    viewIA: boolean;\n    viewOCR: boolean;\n    viewRegra: boolean;\n\n    ngOnInit() {\n        this.feedbacks = new Array<Feedback>();\n        this.getAllFeedbacks();\n\n        this.viewIA = true;\n        this.viewOCR = false;\n        this.viewRegra = false;\n\n    }\n\n    public viewTableIA() {\n        this.viewIA = !this.viewIA;\n        this.viewOCR = false;\n        this.viewRegra = false;\n    }\n    public viewOCRTable() {\n        this.viewOCR = !this.viewOCR;\n        this.viewIA = false;\n        this.viewRegra = false;\n    }\n    public viewRegTablRegra() {\n        this.viewRegra = !this.viewRegra;\n        this.viewIA = false;\n        this.viewOCR = false;\n    }\n\n    private getAllFeedbacks() {\n        this.feedbackService.getAllFeedbacksSolved().\n            subscribe((res: Array<Feedback>) => {\n                this.feedbacks = new Array<Feedback>();\n                this.feedbacksIA = new Array<Feedback>();\n                this.feedbacksOCR = new Array<Feedback>();\n                this.feedbacksRegra = new Array<Feedback>();\n                this.feedbacks = res;\n                // console.log(this.feedbacks);\n\n                for (let feedback of this.feedbacks) {\n                    if (feedback.erro_id == \"1\") {\n                        this.feedbacksIA.push(feedback);\n                    } else if (feedback.erro_id == \"2\") {\n                        this.feedbacksOCR.push(feedback);\n                    } else if (feedback.erro_id == \"3\") {\n                        this.feedbacksRegra.push(feedback);\n                    }\n                }\n\n            });\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <!-- <h4 class=\\\"card-title\\\">Model</h4>   -->\\n    <div class=\\\"card m-2\\\">\\n        <div class=\\\"card-body\\\">\\n            <h4 class=\\\"card-text\\\">Cadatro</h4>\\n            <div class=\\\"row m-2\\\">\\n                <div class=\\\"col-3 text-right\\\">\\n                    <h5>Description</h5>\\n                </div>\\n                <div class=\\\"col-9\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.description\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"row m-2\\\">\\n                <div class=\\\"col-6 offset-6 text-right\\\">\\n                    <input type=\\\"button\\\" value=\\\"INSERT\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"insertModel()\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <hr/>\\n    <div class=\\\"card m-2\\\">\\n        <div class=\\\"card-body\\\">\\n            <h4 class=\\\"card-text\\\">Lista</h4>\\n            <hr/>\\n            <div class=\\\"row m-2\\\">\\n                <div class=\\\"col-12\\\">\\n                    <table class=\\\"table table-striped table-horvered\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>_id</th>\\n                                <th>Description</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let model of models\\\">\\n                                <td>{{model._id}}</td>\\n                                <td>{{model.description}}</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ModelService } from '../../service/model.service';\nimport { Model } from '../../model/model';\n\n@Component({\n  selector: 'app-model',\n  templateUrl: './model.component.html',\n  styleUrls: ['./model.component.css'],\n  providers : [ModelService]\n})\nexport class ModelComponent implements OnInit {\n\n  constructor(private modelService : ModelService) { }\n\n  models: Model[];\n  model: Model;\n  ngOnInit() {\n\n    this.model = new Model();\n\n    this.getAllModels();\n  }\n\n  private getAllModels() {\n    this.modelService.getModelsObservable().\n    subscribe((res: Array<Model>) => {\n      this.models = new Array<Model>();\n      this.models = res;\n    });\n  }\n\n  public insertModel() {\n    this.modelService.insertModelObservable(this.model).subscribe((res: Object) => {\n      alert(\"Inserido\");\n      this.getAllModels();\n    })\n  }\n}\n","module.exports = \".gap-top5 {\\n    margin-top:5px;\\n}\\n\\n.gap-top10 {\\n    margin-top:10px;\\n}\\n\\n.border-other {\\n    margin-top:0px;\\n    padding:5px;\\n    border: #CCCCCC 1px solid;\\n    border-radius: 3px;\\n}\\n\\n.gap-top20 {\\n    margin-top:20px;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <!-- <h4 class=\\\"card-title\\\">Rule</h4>   -->\\n    <div class=\\\"card m-2\\\">\\n        <div class=\\\"card-body\\\">\\n            <h4 class=\\\"card-text\\\">Add Rule</h4>\\n            <div class=\\\"row m-2\\\">\\n                <div class=\\\"col-2 text-right gap-top5\\\">\\n                    <h5>Description</h5>\\n                </div>\\n                <div class=\\\"col-10\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"rule.description\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"row m-2\\\" *ngFor=\\\"let ruleObject of fieldsSelectedForm; let i = index\\\">\\n                <div class=\\\"col-2 text-right gap-top5\\\">\\n                    <h5>Field</h5>\\n                </div>\\n                <div class=\\\"col-2\\\">\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"fieldsSelectedForm[i]\\\" (change)=\\\"changeField(i)\\\">\\n                        <option *ngFor=\\\"let field of fields\\\" value=\\\"{{field._id}}\\\">{{field.title}}</option>\\n                    </select>\\n                </div>\\n                <div class=\\\"col-2 text-center gap-top5\\\">\\n                    <h5>{{fieldsSelectedFormOthers[i] != ''? 'Other Id': ''}}</h5>\\n                </div>\\n                <div class=\\\"col-2 text-left gap-top5 border-other\\\">\\n                    {{fieldsSelectedFormOthers[i]}}\\n                </div>\\n                <div class=\\\"col-2 text-right\\\" *ngIf=\\\"(( fieldsSelectedForm.length - 1) | number) == (i | number)\\\">\\n                    <input type=\\\"button\\\" value=\\\"ADD\\\" class=\\\"btn btn-dark form-control\\\" (click)=\\\"addField()\\\">\\n                </div>\\n                <div class=\\\"col-2 text-right\\\" *ngIf=\\\"(( fieldsSelectedForm.length - 1) | number) > 0 && i != 0 && (( fieldsSelectedForm.length - 1) | number) == (i | number)\\\">\\n                    <input type=\\\"button\\\" value=\\\"REMOVE\\\" class=\\\"btn btn-danger form-control\\\" (click)=\\\"removeField()\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"row m-2\\\">\\n                <div class=\\\"col-2 text-right gap-top5\\\">\\n                    <h5>Acceptance Percentage</h5>\\n                </div>\\n                <div class=\\\"col-2\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"rule.acceptancePercentage\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"row m-2\\\">\\n                <div class=\\\"col-2 text-right gap-top5\\\">\\n                    <h5>Important Acceptance Percentage</h5>\\n                </div>\\n                <div class=\\\"col-2\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"rule.importantAcceptancePercentage\\\">\\n                </div>\\n            </div>\\n            <hr/>\\n            <div class=\\\"row m-2 \\\">\\n                <div class=\\\"col-6 offset-3 text-right gap-top20\\\">\\n                    <input type=\\\"button\\\" value=\\\"INSERT\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"insertRule()\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <hr/>\\n    <div class=\\\"card m-2\\\">\\n        <div class=\\\"card-body\\\">\\n            <h4 class=\\\"card-text\\\">List Rules</h4>\\n            <hr/>\\n            <div class=\\\"row m-2\\\">\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"row m-2\\\" *ngFor=\\\"let rule of rules\\\">\\n                        <div class=\\\"col-8 text-left gap-top10\\\">\\n                            <h5>{{rule.description}}</h5>\\n                        </div>\\n                        <div class=\\\"col-2 text-right\\\">\\n                            <input type=\\\"button\\\" value=\\\"VIEW\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"view(rule._id, rule.description)\\\">\\n                        </div>\\n                        <div class=\\\"col-2 text-right\\\">\\n                            <input type=\\\"button\\\" value=\\\"REMOVE\\\" class=\\\"btn btn-danger form-control\\\" (click)=\\\"removeRule(rule._id)\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <hr/>\\n    <div class=\\\"card m-2\\\" *ngIf=\\\"_id != '' && _id != undefined\\\">\\n        <div class=\\\"card-body\\\">\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                    <h4 class=\\\"card-text\\\">List Fields - {{ruleTitle}}</h4>\\n                </div>\\n                <div class=\\\"col-4 offset-4\\\">\\n                    <input type=\\\"button\\\" value=\\\"INSERT\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"insertField(content)\\\">\\n                </div>\\n            </div>\\n            <hr/>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-8 offset-2\\\">\\n                    <div class=\\\"card m-2  bg-dark text-white\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row m-2\\\">\\n                                <div class=\\\"col-3 text-right gap-top5\\\">\\n                                    <h5>Acceptance Percentage</h5>\\n                                </div>\\n                                <div class=\\\"col-2\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"importantAcceptancePercentage\\\">\\n                                </div>\\n                                <div class=\\\"col-4 text-right gap-top5\\\">\\n                                    <h5>Important Acceptance Percentage</h5>\\n                                </div>\\n                                <div class=\\\"col-2\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"acceptancePercentage\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row m-2 \\\">\\n                                <div class=\\\"col-4 offset-4 text-right gap-top20\\\">\\n                                    <input type=\\\"button\\\" value=\\\"SAVE\\\" class=\\\"btn btn btn-info form-control\\\" (click)=\\\"saveUpdate()\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <hr/>\\n            <div class=\\\"row m-2\\\">\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"table-responsive\\\">\\n                        <table class=\\\"table table-striped table-horvered \\\">\\n                            <thead>\\n                                <tr>\\n                                    <!-- <th>_id</th> -->\\n                                    <th>Title</th>\\n                                    <th>Model</th>\\n                                    <!-- <th>Need Other ID?</th> -->\\n                                    <th>Type</th>\\n                                    <th>Title</th>\\n                                    <th>Model</th>\\n                                    <!-- <th>Percentage</th> -->\\n                                    <!-- <th>Dependency</th> -->\\n                                    <!-- <th>Dependency ID</th> -->\\n                                    <th>Edit</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let field of fieldsRuleView\\\">\\n                                    <!-- <td>{{field._id}}</td> -->\\n                                    <td>{{field.title}}</td>\\n                                    <td>{{field.titleModel}}</td>\\n                                    <!-- <td>{{field.needOtderId}}</td> -->\\n                                    <td>{{field.titleType}}</td>\\n                                    <td>{{field.titleId}}</td>\\n                                    <td>{{field.titleModelId}}</td>\\n                                    <!-- <td>{{field.percentage == 100 || field.percentage == 0 ? '' : field.percentage}}</td> -->\\n                                    <!-- <td>{{field.dependency}}</td> -->\\n                                    <!-- <td>{{field.idDependency}}</td> -->\\n                                    <td>\\n                                        <i class=\\\"fa fa-2x fa-remove click\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"removeFieldFromRule(field._id)\\\"></i>\\n                                    </td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"card-body\\\">\\n            <h4 class=\\\"card-text\\\">List (Nenhum)\\n            </h4>\\n            <hr/>\\n            <div class=\\\"row m-2\\\">\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"table-responsive\\\">\\n                        <table class=\\\"table table-striped table-horvered \\\">\\n                            <thead>\\n                                <tr>\\n                                    <!-- <th>_id</th> -->\\n                                    <th>Title</th>\\n                                    <th>Model</th>\\n                                    <!-- <th>Need Other ID?</th> -->\\n                                    <th>Type</th>\\n                                    <!-- <th>Title</th> -->\\n                                    <!-- <th>Model</th> -->\\n                                    <!-- <th>Percentage</th> -->\\n                                    <!-- <th>Dependency</th> -->\\n                                    <!-- <th>Dependency ID</th> -->\\n\\n                                    <th>Edit</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let field of fieldsRuleViewNenhum\\\">\\n                                    <!-- <td>{{field._id}}</td> -->\\n                                    <td>{{field.title}}</td>\\n                                    <td>{{field.titleModel}}</td>\\n                                    <!-- <td>{{field.needOtderId}}</td> -->\\n                                    <td>Nenhum</td>\\n                                    <!-- <td>{{field.titleId}}</td> -->\\n                                    <!-- <td>{{field.titleModelId}}</td> -->\\n                                    <!-- <td>{{field.percentage}}</td> -->\\n                                    <!-- <td>{{field.dependency}}</td> -->\\n                                    <!-- <td>{{field.idDependency}}</td> -->\\n                                    <td>\\n                                        <i class=\\\"fa fa-2x fa-remove click\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"removeFieldFromRule(field._id)\\\"></i>\\n                                    </td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Update Field</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"row m-2\\\">\\n                        <div class=\\\"col-2 text-right\\\">\\n                            <h5>Field</h5>\\n                        </div>\\n                        <div class=\\\"col-6\\\">\\n                            <select class=\\\"form-control\\\" [(ngModel)]=\\\"fieldAddrule\\\" (change)=\\\"changeFieldAddRule()\\\">\\n                                <option *ngFor=\\\"let field of fields\\\" value=\\\"{{field._id}}\\\">{{field.title}}</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row m-2\\\" *ngIf=\\\"fieldAddruleOtherId != '' && fieldAddruleOtherId != undefined\\\">\\n                        <div class=\\\"col-2 text-right\\\">\\n                            <h5>Other Id</h5>\\n                        </div>\\n                        <div class=\\\"col-6\\\">\\n                            <h5>{{fieldAddruleOtherId}}</h5>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" id=\\\"close\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"insertFieldFromRule()\\\">INSERT</button>\\n        </div>\\n    </ng-template>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RuleService } from '../../service/rule.service';\nimport { Rule } from '../../model/rule';\nimport { Field } from '../../model/field';\nimport { FieldService } from '../../service/field.service';\nimport { TypeService } from '../../service/type.service';\nimport { ModelService } from '../../service/model.service';\nimport { NgbModal } from '../../../node_modules/@ng-bootstrap/ng-bootstrap';\nimport { Model } from '../../model/model';\nimport { Type } from '../../model/type';\nimport { FieldRule } from '../../model/field-rule';\n\n@Component({\n  selector: 'app-rule',\n  templateUrl: './rule.component.html',\n  styleUrls: ['./rule.component.css'],\n  providers: [RuleService, FieldService]\n})\nexport class RuleComponent implements OnInit {\n\n  constructor(\n    private ruleService: RuleService,\n    private fieldService: FieldService,\n    private typeService: TypeService,\n    private modelService: ModelService,\n    private modalService: NgbModal,\n  ) { }\n\n  fieldsNenhum: Field[];\n  fieldsSelected: Field[];\n\n  types: Type[];\n  models: Model[];\n\n  field: Field;\n  fieldEdit: Field;\n\n  rules: Rule[];\n  rule: Rule;\n  ruleTitle: string;\n  fields: Field[];\n\n  fieldsRuleView: Field[];\n  fieldsSelectedForm: any[];\n  fieldsSelectedFormOthers: any[];\n  fieldsRuleViewNenhum: Field[];\n  fieldAddrule: string;\n  fieldAddruleOtherId: string;\n\n  importantAcceptancePercentage: String\n  acceptancePercentage: String;\n  idRuleUpdate: String;\n\n  _id: string;\n  ngOnInit() {\n\n    this.rule = new Rule();\n    this.rule.type = \"RULE\";\n    this.fieldsSelected = new Array<any>();\n    this.fieldsSelected.push(new Field());\n\n    this.fieldsSelectedForm = new Array<any>();\n    this.fieldsSelectedForm.push(\"\");\n\n    this.fieldsSelectedFormOthers = new Array<any>();\n    this.fieldsSelectedFormOthers.push(\"\");\n\n    this.getAllRules();\n    this.getAllFields();\n  }\n\n  public changeField(index: string) {\n    var contains: boolean = false;\n    for (let field of this.fields) {\n      if (field._id == this.fieldsSelectedForm[parseInt(index)]) {\n        if (field.needOtherId == true) {\n          for (let fieldOtherId of this.fields) {\n            if (field.otherId == fieldOtherId._id) {\n              if (fieldOtherId.titleType == \"Nenhum\") {\n                this.fieldsSelectedFormOthers[parseInt(index)] = fieldOtherId.title;\n                contains = true;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (contains == false) {\n      this.fieldsSelectedFormOthers[parseInt(index)] = \"\";\n    }\n  }\n\n  public changeFieldAddRule(index: string) {\n    var contains: boolean = false;\n    for (let field of this.fields) {\n      if (field._id == this.fieldAddrule) {\n        if (field.needOtherId == true) {\n          for (let fieldOtherId of this.fields) {\n            if (field.otherId == fieldOtherId._id) {\n              this.fieldAddruleOtherId = String(fieldOtherId.title);\n              contains = true;\n            }\n          }\n        }\n      }\n    }\n\n    if (contains == false) {\n      this.fieldAddruleOtherId = \"\";\n    }\n  }\n\n  public addField() {\n    this.fieldsSelectedForm.push(new Field());\n    this.fieldsSelectedFormOthers.push(\"\");\n  }\n\n  public insertFieldFromRule() {\n    let fieldRule = new FieldRule();\n    fieldRule.idField = this.fieldAddrule;\n    fieldRule._id = this._id;\n\n    this.ruleService.addFieldFromRule(fieldRule)\n      .subscribe(res => {\n        let contains = false;\n\n        for (let field of this.fields) {\n          if (field.title == this.fieldAddruleOtherId) {\n            contains = true;\n            fieldRule.idField = String(field._id);\n            fieldRule._id = this._id;\n            fieldRule.useOtherId = true;\n\n            this.ruleService.addFieldFromRule(fieldRule)\n              .subscribe(res => {\n                alert(\"Inserido com sucesso\");\n                this.view(this._id, \"\");\n\n                let close = document.getElementById(\"close\");\n                close.click();\n\n              }, err => {\n                console.log(err);\n              })\n            break;\n          }\n        }\n\n        if (contains == false) {\n          alert(\"Inserido com sucesso\");\n          this.view(this._id, \"\");\n\n          let close = document.getElementById(\"close\");\n          close.click();\n        }\n      }, err => {\n        console.log(err);\n      });\n\n\n\n\n  }\n\n  public removeFieldFromRule(idField: string) {\n    let fieldRule = new FieldRule();\n    fieldRule.idField = idField;\n    fieldRule._id = this._id;\n\n    this.ruleService.removeFieldFromRule(fieldRule)\n      .subscribe(res => {\n        alert(\"Removido com sucesso\");\n        this.view(this._id, \"\");\n      }, err => {\n        console.log(err);\n      })\n  }\n\n  public removeField() {\n    this.fieldsSelectedForm.pop();\n    this.fieldsSelectedFormOthers.pop();\n  }\n\n  private getAllRules() {\n    this.ruleService.getRulesObservable().\n      subscribe((res: Array<Rule>) => {\n        this.rules = new Array<Rule>();\n        this.rules = res;\n      });\n  }\n\n  private getAllFields() {\n    this.field = new Field();\n    this.models = new Array<Model>();\n    this.fields = new Array<Field>();\n    this.types = new Array<Type>();\n\n    this.field.type = \"FIELD\";\n\n    if (this.fields.length == 0) {\n      this.fieldService.getFieldsObservable().\n        subscribe((res: Array<Field>) => {\n          this.fields = new Array<Field>();\n          this.fields = res;\n\n\n          this.getAllTypes();\n        });\n    } else {\n      this.setFields();\n    }\n  }\n\n  private getAllTypes() {\n    if (this.types.length == 0) {\n      this.typeService.getTypesObservable().\n        subscribe((res: Array<Type>) => {\n          this.types = new Array<Type>();\n          this.types = res;\n\n          this.setFields();\n        });\n    } else {\n      this.setTypes();\n    }\n  }\n\n  private setFields() {\n    for (let field of this.fields) {\n      for (let otherField of this.fields) {\n        if (otherField._id == field.otherId) {\n          field.titleId = otherField.title;\n        }\n      }\n    }\n\n    this.getAllModels();\n\n  }\n\n  private setTypes() {\n    let count = 0;\n    for (let field of this.fields) {\n      for (let type of this.types) {\n        if (type._id == field.idType) {\n          this.fields[count].titleType = type.description;\n        }\n      }\n      count++;\n    }\n\n    this.fieldsNenhum = new Array<Field>();\n    this.fieldsSelected = new Array<Field>();\n\n    for (let field of this.fields) {\n      if (field.titleType == \"Nenhum\") {\n        this.fieldsNenhum.push(field);\n      } else {\n        this.fieldsSelected.push(field);\n      }\n    }\n\n  }\n\n  private getAllModels() {\n    if (this.models.length == 0) {\n      this.modelService.getModelsObservable().\n        subscribe((res: Array<Model>) => {\n          this.models = new Array<Model>();\n          this.models = res;\n\n          this.setModels();\n        });\n    } else {\n      this.setModels();\n    }\n  }\n\n  private setModels() {\n    for (let field of this.fields) {\n      for (let model of this.models) {\n        if (model._id == field.idModel) {\n          field.titleModel = model.description;\n        }\n      }\n    }\n\n    for (let fieldTop of this.fields) {\n      for (let field of this.fields) {\n        if (field.otherId == fieldTop._id) {\n          for (let model of this.models) {\n            if (model._id == fieldTop.idModel) {\n              field.titleModelId = model.description;\n            }\n          }\n        }\n      }\n    }\n\n\n    this.setTypes();\n  }\n\n  public removeRule() {\n\n  }\n\n  public saveUpdate() {\n    this.ruleService.updatePercentageObservable(this.idRuleUpdate, this.importantAcceptancePercentage, this.acceptancePercentage)\n      .subscribe(res => {\n        alert(\"Update Success!\");\n      }, err => {\n        console.log(err);\n      })\n  }\n\n  public view(_id: string, rule: string) {\n    if (_id != undefined) {\n      this.ruleService.getRuleByIdObservable(_id)\n        .subscribe(res => {\n          this._id = _id;\n          if (rule != \"\") {\n            this.ruleTitle = rule;\n          }\n\n          this.importantAcceptancePercentage = res.importantAcceptancePercentage;\n          this.acceptancePercentage = res.acceptancePercentage\n          this.idRuleUpdate = res._id;\n\n          var fields = res.fields;\n\n          this.fieldsRuleView = new Array<Field>();\n          this.fieldsRuleViewNenhum = new Array<Field>();\n\n          for (let field of fields) {\n            for (let fieldSelected of this.fieldsSelected) {\n              if (field._id == fieldSelected._id) {\n                if (field.idType == \"fecde76de43641609a7da3a6a2014642\") {\n\n                  var contains = false;\n                  for (let field of this.fieldsRuleViewNenhum) {\n                    if (field._id == fieldSelected._id) {\n                      contains = true;\n                    }\n                  }\n\n                  if (contains == false) {\n                    this.fieldsRuleViewNenhum.push(fieldSelected);\n                  }\n                } else {\n                  var contains = false;\n                  for (let field of this.fieldsRuleView) {\n                    if (field._id == fieldSelected._id) {\n                      contains = true;\n                    }\n                  }\n\n                  if (contains == false) {\n                    this.fieldsRuleView.push(fieldSelected);\n                  }\n\n\n\n                }\n              }\n            }\n          }\n\n          for (let field of fields) {\n            for (let fieldSelected of this.fieldsNenhum) {\n              if (field._id == fieldSelected._id) {\n                var contains = false;\n                for (let field of this.fieldsRuleViewNenhum) {\n                  if (field._id == fieldSelected._id) {\n                    contains = true;\n                  }\n                }\n\n                if (contains == false) {\n                  this.fieldsRuleViewNenhum.push(fieldSelected);\n                }\n              }\n            }\n          }\n\n\n\n        }, err => {\n          console.log(err);\n        });\n    }\n  }\n\n  public insertField(content) {\n    this.modalService.open(content, { centered: true, size: 'lg' });\n  }\n\n\n  public insertRule() {\n    let fieldsInsert = new Array<Field>();\n    for (let fieldSel of this.fieldsSelectedForm) {\n      for (let field of this.fields) {\n        if (field._id == String(fieldSel)) {\n          fieldsInsert.push(field);\n          if (field.needOtherId == true) {\n            for (let fieldOtherId of this.fields) {\n              if (field.otherId == fieldOtherId._id) {\n                if (fieldOtherId.titleType == \"Nenhum\") {\n                  fieldsInsert.push(fieldOtherId);\n                } else {\n                  fieldOtherId.idType = \"fecde76de43641609a7da3a6a2014642\";\n                  fieldOtherId.otherId = \"false\";\n                  fieldOtherId.needOtherId = false;\n                  fieldOtherId.titleType = \"Nenhum\";\n                  fieldOtherId.titleModelId = \"\";\n\n                  fieldsInsert.push(fieldOtherId);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this.rule.fields = fieldsInsert;\n\n    this.ruleService.insertRuleObservable(this.rule).subscribe((res: Object) => {\n      alert(\"Inserido\");\n      this.getAllRules();\n\n      this.rule = new Rule();\n      this.rule.type = \"RULE\";\n      this.fieldsSelectedForm = new Array<any>();\n      this.fieldsSelectedForm.push(new Field());\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <!-- <h4 class=\\\"card-title\\\">Type</h4>   -->\\n    <div class=\\\"card m-2\\\">\\n        <div class=\\\"card-body\\\">\\n            <h4 class=\\\"card-text\\\">Cadatro</h4>\\n            <div class=\\\"row m-2\\\">\\n                <div class=\\\"col-3 text-right\\\">\\n                    <h5>Description</h5>\\n                </div>\\n                <div class=\\\"col-9\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"type.description\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"row m-2\\\">\\n                <div class=\\\"col-3 text-right\\\">\\n                    <h5>Command</h5>\\n                </div>\\n                <div class=\\\"col-9\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"type.command\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"row m-2\\\">\\n                <div class=\\\"col-6 offset-6 text-right\\\">\\n                    <input type=\\\"button\\\" value=\\\"INSERT\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"insertType()\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <hr/>\\n    <div class=\\\"card m-2\\\">\\n        <div class=\\\"card-body\\\">\\n            <h4 class=\\\"card-text\\\">Lista</h4>\\n            <hr/>\\n            <div class=\\\"row m-2\\\">\\n                <div class=\\\"col-12\\\">\\n                    <table class=\\\"table table-striped table-horvered\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>_id</th>\\n                                <th>Description</th>\\n                                <th>Command</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let type of types\\\">\\n                                <td>{{type._id}}</td>\\n                                <td>{{type.description}}</td>\\n                                <td>{{type.command}}</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TypeService } from '../../service/type.service';\nimport { Type } from '../../model/type';\n\n@Component({\n  selector: 'app-type',\n  templateUrl: './type.component.html',\n  styleUrls: ['./type.component.css'],\n  providers : [TypeService]\n})\nexport class TypeComponent implements OnInit {\n\n  constructor(private typeService : TypeService) { }\n\n  types: Type[];\n  type: Type;\n  ngOnInit() {\n\n    this.type = new Type();\n\n    this.getAllTypes();\n  }\n\n  private getAllTypes() {\n    this.typeService.getTypesObservable().\n    subscribe((res: Array<Type>) => {\n      this.types = new Array<Type>();\n      this.types = res;\n    });\n  }\n\n  public insertType() {\n    this.typeService.insertTypeObservable(this.type).subscribe((res: Object) => {\n      alert(\"Inserido\");\n      this.getAllTypes();\n    });\n  }\n}\n","module.exports = \".dark-modal .modal-content {\\n    background-color: #292b2c;\\n    color: white;\\n  }\\n  .dark-modal .close {\\n    color: white;\\n  }\\n  .light-blue-backdrop {\\n    background-color: #5cb3fd;\\n  }\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"card m-2\\\">\\n    <div class=\\\"card-body\\\">\\n      <h4 class=\\\"card-text\\\">Select</h4>\\n      <hr/>\\n      <div class=\\\"row m-2\\\">\\n        <div class=\\\"col-12\\\">\\n          <table class=\\\"table table-striped table-horvered\\\">\\n            <thead>\\n              <tr>\\n                <th>Description</th>\\n                <!-- <th>_id</th> -->\\n                <th>Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let rule of rules; let i = index\\\">\\n                <td>{{rule.description}}</td>\\n                <!-- <td>{{rule._id}}</td> -->\\n                <td>\\n                  <input type=\\\"button\\\" value=\\\"TEST\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"addValidator(i)\\\">\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card m-2\\\">\\n    <div class=\\\"card-body\\\">\\n      <h4 class=\\\"card-text\\\">Lista</h4>\\n\\n      <div class=\\\"row m-2\\\" *ngIf=\\\"rule.fields != undefined\\\">\\n        <div class=\\\"col-12\\\">\\n          \\t<div class=\\\"row\\\">\\n              <div class=\\\"col-4 text-left\\\" *ngIf=\\\"resultDokia != undefined\\\"><h5>Result Dokia</h5></div>\\n              <div class=\\\"col-2\\\"><h4>{{resultDokia}}</h4></div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4 text-left\\\" *ngIf=\\\"resultPercentageImportant != undefined\\\"><h5>Result Percentage Important</h5></div>\\n              <div class=\\\"col-2\\\"><h4>{{resultPercentageImportant}}</h4></div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4 text-left\\\" *ngIf=\\\"importantAcceptancePercentage != undefined\\\"><h5>Important Acceptance Percentage</h5></div>\\n              <div class=\\\"col-2\\\"><h4>{{importantAcceptancePercentage}}</h4></div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4 text-left\\\" *ngIf=\\\"resultPercentage != undefined\\\"><h5>Result Percentage</h5></div>\\n              <div class=\\\"col-2\\\"><h4>{{resultPercentage}}</h4></div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4 text-left\\\" *ngIf=\\\"acceptancePercentage != undefined\\\"><h5>Acceptance Percentage</h5></div>\\n              <div class=\\\"col-2\\\"><h4>{{acceptancePercentage}}</h4></div>\\n            </div>\\n\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"row m-2\\\">\\n        <div class=\\\"col-12\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-horvered table-striped \\\">\\n              <thead>\\n                <tr>\\n                  <th>Titile</th>\\n                  <th>Model</th>\\n                  <th>Value</th>\\n                  <th>Type</th>\\n                  <th>Other ID</th>\\n                  <th>Model ID</th>\\n                  <th>Percentage</th>\\n                  <th>Percentage Obtained</th>\\n                  <th>Result</th>\\n                  <th></th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let field of rule.fields; let i = index;\\\" [ngClass]=\\\"[field.result == 'true' ? 'table-success' : '']\\\">\\n                  <td class=\\\"success\\\">{{field.title}}</td>\\n\\n                  <td>{{field.titleModel}}</td>\\n                  <td>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"field.value\\\">\\n                  </td>\\n                  <td>{{field.titleType}}</td>\\n                  <td>{{field.titleId}}</td>\\n                  <td>{{field.titleModelId}}</td>\\n                  <td>{{field.percentage == 100 || field.percentage == 0 || field.percentage == undefined ? '' : field.percentage\\n                    + '%'}}</td>\\n                  <td>{{field.percentageResult == undefined || field.percentageResult == 0 ? '' : field.percentageResult + '%'}}</td>\\n                  <td>{{field.result}}</td>\\n                  <td>\\n                    <i *ngIf=\\\"field.result == 'true' && field.value != '' && field.value != undefined && field.titleType != 'Nenhum'\\\" class=\\\"fa fa-2x fa-check\\\"></i>\\n                    <i *ngIf=\\\"field.result == 'false' && field.value != '' && field.value != undefined && field.titleType != 'Nenhum'\\\" class=\\\"fa fa-2x fa-times\\\"></i>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row m-2\\\">\\n        <div class=\\\"col-6 offset-3\\\">\\n          <input type=\\\"button\\\" class=\\\"btn btn-primary form-control\\\" value=\\\"VALIDATOR\\\" (click)=\\\"validator()\\\" />\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- COLOCAR MODAL -->\\n</div>\"","import { Component, OnInit } from '@angular/core';\n// import { ValidatorService } from '../../service/validator.service';\nimport { Input } from '../../model/input';\nimport { RuleService } from '../../service/rule.service';\nimport { Rule } from '../../model/rule';\nimport { Model } from '../../model/model';\nimport { Field } from '../../model/field';\nimport { FieldService } from '../../service/field.service';\nimport { TypeService } from '../../service/type.service';\nimport { Type } from '../../model/type';\nimport { ModelService } from '../../service/model.service';\nimport { Document } from '../../model/document';\nimport { ValidatorService } from '../../service/validator.service';\nimport { Result } from '../../model/result';\nimport { ResultRule } from '../../model/result-rule';\n\n@Component({\n  selector: 'app-validator',\n  templateUrl: './validator.component.html',\n  styleUrls: ['./validator.component.css'],\n  providers: [RuleService]\n})\nexport class ValidatorComponent implements OnInit {\n\n  constructor(\n    // private validatorService : ValidatorService,\n    private ruleService: RuleService,\n    private fieldService: FieldService,\n    private typeService: TypeService,\n    private modelService: ModelService,\n    private validatorService: ValidatorService,\n  ) { }\n\n  validators: Input[];\n  rules: Rule[];\n  models: Model[];\n  fields: Field[];\n  types: Type[];\n\n  resultDokia:String;\n  resultPercentageImportant:String;\n  importantAcceptancePercentage:String;\n  resultPercentage:String;\n  acceptancePercentage:String;\n\n  rule: Rule;\n  ngOnInit() {\n    this.rule = new Rule();\n    this.getAllRules();\n\n\n\n  }\n\n\n  public addValidator(index) {\n    let count = 0;\n    for (const rule of this.rules) {\n      if (count == index) {\n        this.rule = rule;\n\n        let fields = this.rule.fields;\n        this.rule.fields = Array<Field>();\n\n        for(let field of fields) {\n          var contains = false;\n          for(let fieldRule of this.rule.fields) {\n            if(fieldRule._id == field._id) {\n              contains = true;\n            }\n          }\n\n          if(contains == false) {\n            this.rule.fields.push(field);\n          }\n        }\n\n      }\n      count++;\n    }\n\n    this.models = new Array<Model>();\n    this.fields = new Array<Field>();\n    this.types = new Array<Type>();\n\n    this.getAllModels();\n    this.getAllTypes();\n    this.getAllFields();\n\n  }\n\n  private getAllModels() {\n    if (this.models.length == 0) {\n      this.modelService.getModelsObservable().\n        subscribe((res: Array<Model>) => {\n          this.models = new Array<Model>();\n          this.models = res;\n\n          this.setModels();\n        });\n    } else {\n      this.setModels();\n    }\n  }\n\n  private getAllTypes() {\n    if (this.types.length == 0) {\n      this.typeService.getTypesObservable().\n        subscribe((res: Array<Type>) => {\n          this.types = new Array<Type>();\n          this.types = res;\n\n          this.setTypes();\n        });\n    } else {\n      this.setTypes();\n    }\n  }\n\n  private setModels() {\n    for (let field of this.rule.fields) {\n      for (let model of this.models) {\n        if (model._id == field.idModel) {\n          field.titleModel = model.description;\n        }\n        \n      }\n    }\n\n    for (let fieldTop of this.rule.fields) {\n      for (let field of this.rule.fields) {\n        if(field.otherId == fieldTop._id) {\n          for (let model of this.models) {\n            if (model._id == fieldTop.idModel) {\n              field.titleModelId = model.description;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  private setTypes() {\n    let count = 0;\n    for (let field of this.rule.fields) {\n      for (let type of this.types) {\n        if (type._id == field.idType) {\n          this.rule.fields[count].titleType = type.description;\n        }\n      }\n      count++;\n    }\n  }\n\n  private setFields() {\n    for (let field of this.rule.fields) {\n      for (let otherField of this.fields) {\n        if (otherField._id == field.otherId) {\n          field.titleId = otherField.title;\n        }\n      }\n    }\n  }\n\n  private getAllFields() {\n    if (this.fields.length == 0) {\n      this.fieldService.getFieldsObservable().\n        subscribe((res: Array<Field>) => {\n          this.fields = new Array<Field>();\n          this.fields = res;\n\n          this.setFields();\n        });\n    } else {\n      this.setFields();\n    }\n  }\n\n  public validator() {\n    let inputs = new Array<Input>();\n    for (const field of this.rule.fields) {\n      let input = new Input();\n      input.idField = field._id;\n      input.value = field.value;\n\n      inputs.push(input);\n    }\n\n    let document = new Document();\n    document.inputs = inputs;\n    document.idRule = this.rule._id;\n\n    this.validatorService.insertValidatorObservable(document).subscribe((res: ResultRule) => {\n      let result = Array<Result>();\n      result = res.result;\n\n      this.resultDokia = String(res.resultDokia);\n      this.resultPercentageImportant = String(res.resultPercentageImportant);\n      this.importantAcceptancePercentage = String(res.importantAcceptancePercentage);\n      this.resultPercentage = String(res.resultPercentage);\n      this.acceptancePercentage = String(res.acceptancePercentage);\n\n      let count = 0;\n      for(let fields of this.rule.fields) {\n        let res = \"\";\n        let percentageResult = \"\";\n\n        for(let rst of result) {\n          if(fields._id == rst.idField) {\n            res = String(rst.result);\n            percentageResult = String(rst.percentageResult);\n          }\n        }\n\n        this.rule.fields[count].result = res;\n        this.rule.fields[count].percentageResult = Math.round(Number(percentageResult));\n        count ++;\n      }\n    })\n  }\n\n  private getAllRules() {\n    this.ruleService.getRulesObservable().\n      subscribe((res: Array<Rule>) => {\n        this.rules = new Array<Rule>();\n        this.rules = res;\n      });\n  }\n\n}\n","export const environment = {\n  production: false,\n  apiUrl: 'https://dokia-rules.mybluemix.net/api',\n  // apiUrl: 'http://localhost:9080/validator-dokia/api',\n};\n ","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","import { Input } from \"./input\";\n\nexport class Document {\n    inputs: Array<Input>;\n    idRule: String;\n}","export class FieldRule {\n    idField:string;\n    _id:string;\n    useOtherId:boolean;\n}","export class Field {\n    _id: String;\n\t_rev: String;\n\n\tidType: String;\n\ttitleType:String;\n\t\n\ttitle: String;\n\tvalue : any;\n\tneedOtherId: Boolean;\n\t\n\totherId: String;\n\ttitleId:String;\n\ttitleModelId: String;\n\t\n\ttype: String;\n\n\tidModel:String;\n\ttitleModel:String;\n\n\tdependency:boolean;\n\tidDependency:string;\n\n\tresult:String;\n\tpercentage: number;\n\tpercentageResult: number;\n\n\timportant:boolean;\n}","export class Input {\n    _id:String;\n    _rev:String;\n    value:String;\n    idField:String;\n}","export class Model {\n    _id:String;\n    _rev:String;\n    description:String;\n    type:String;\n}","import { Field } from \"./field\";\n\nexport class Rule {\n    _id: String;\n    _rev: String;\n    fields: Field[];\n    type: String;\n    description: String;\n    acceptancePercentage:String;\n    importantAcceptancePercentage:String;\n}","export class Type {\n    description : String;\n    command: String;\n    _id: String;\n    _rev: String;\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { Observable } from 'rxjs';\nimport { Feedback } from '../model/feedback';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n\n  constructor(public http: HttpClient) {}\n\n  private headers =  new HttpHeaders().set('Content-Type', 'application/json');\n  private feedbackURL = environment.apiUrl + '/feedback';\n\n  getFeedbacksObservable(): Observable<Object> {\n    return this.http.get<Feedback[]>(this.feedbackURL)\n  }\n\n  getAllFeedbacksSolved(): Observable<Object> {\n    return this.http.get<Feedback[]>(this.feedbackURL + \"/solved\")\n  }\n\n  \n\n  updateStatus(id: String) : Observable<Object> {\n    return this.http.post<Object>(this.feedbackURL + \"/\" + id, {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { Observable } from 'rxjs';\nimport { Field } from '../model/field';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FieldService {\n\n  constructor(public http: HttpClient) { }\n\n  private headers = new HttpHeaders().set('Content-Type', 'application/json');\n  private fieldURL = environment.apiUrl + '/field';\n\n  getFieldsObservable(): Observable<Object> {\n    return this.http.get<Field[]>(this.fieldURL)\n  }\n\n  getFieldByIdObservable(_id: string): Observable<Field> {\n    return this.http.get<Field>(this.fieldURL + \"/byId/\" + _id);\n  }\n\n  updateField(field: Field): Observable<Object> {\n    return this.http.post<Object>(this.fieldURL + \"/update\", field, {\n      headers: this.headers\n    });\n  }\n\n\n  insertFieldObservable(field: Field): Observable<boolean> {\n    return this.http.post<boolean>(this.fieldURL, field, {\n      headers: this.headers\n    });\n  }\n\n}\n","import { Injectable, NgModule, Inject } from '@angular/core';\nimport {\n    HttpEvent,\n    HttpInterceptor,\n    HttpHandler,\n    HttpRequest,\n} from '@angular/common/http';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, catchError, finalize } from 'rxjs/operators';\n\n\n@Injectable()\nexport class HTTPStatus {\n    private requestInFlight$: BehaviorSubject<boolean>;\n    constructor() {\n        this.requestInFlight$ = new BehaviorSubject(false);\n    }\n\n    setHttpStatus(inFlight: boolean) {\n        this.requestInFlight$.next(inFlight);\n    }\n\n    getHttpStatus(): Observable<boolean> {\n        return this.requestInFlight$.asObservable();\n    }\n}\n\n@Injectable()\nexport class HttpsRequestInterceptor implements HttpInterceptor {\n\n    constructor(private status: HTTPStatus) { }\n\n    public getFromLocal(key): string {\n        return localStorage.getItem(key);\n    }\n\n    intercept(\n        req: HttpRequest<any>,\n        next: HttpHandler,\n    ): Observable<HttpEvent<any>> {\n        var result = req.url.includes(\"/api/\");\n        if (result) this.status.setHttpStatus(true);\n        \n        let dupReq = req.clone({});\n\n        return next.handle(dupReq).pipe(\n            map(event => {\n                \n                return event;\n            }),\n            catchError(error => {\n                return Observable.throw(error);\n            }),\n            finalize(() => {\n                var result = req.url.includes(\"/api/\");\n                if (result) this.status.setHttpStatus(false);\n            })\n        );\n    }\n}\n@NgModule({\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: HttpsRequestInterceptor,\n            multi: true,\n        },\n    ],\n})\nexport class Interceptor { }","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { Observable } from 'rxjs';\nimport { Model } from '../model/model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModelService {\n\n  constructor(public http: HttpClient) {}\n\n  private headers =  new HttpHeaders().set('Content-Type', 'application/json');\n  private modelURL = environment.apiUrl + '/model';\n\n  getModelsObservable(): Observable<Object> {\n    return this.http.get<Model[]>(this.modelURL)\n  }\n\n  insertModelObservable(model: Model) : Observable<Object> {\n    return this.http.post<Object>(this.modelURL, model);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { Observable } from 'rxjs';\nimport { Rule } from '../model/rule';\nimport { FieldRule } from '../model/field-rule';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RuleService {\n\n  constructor(public http: HttpClient) {}\n\n  private headers =  new HttpHeaders().set('Content-Type', 'application/json');\n  private ruleURL = environment.apiUrl + '/rule';\n \n \n  getRuleByIdObservable(_id:String): Observable<Rule> {\n    return this.http.get<Rule>(this.ruleURL + \"/\" + _id);\n  }\n\n\n  updatePercentageObservable(idRule: String, importantAcceptancePercentage: String, acceptancePercentage: String) : Observable<Object> {\n    return this.http.post<Object>(this.ruleURL + \"/update-percentage/\" + idRule + \"/\" + importantAcceptancePercentage + \"/\" + acceptancePercentage, {});\n  }\n\n\n  getRulesObservable(): Observable<Object> {\n    return this.http.get<Rule[]>(this.ruleURL)\n  }\n\n  insertRuleObservable(rule: Rule) : Observable<Object> {\n    return this.http.post<Object>(this.ruleURL, rule);\n  }\n  \n  removeFieldFromRule(fieldRule: FieldRule) : Observable<Object> {\n    return this.http.post<Object>(this.ruleURL + \"/remove-field\", fieldRule);\n  }\n\n  addFieldFromRule(fieldRule: FieldRule) : Observable<Object> {\n    return this.http.post<Object>(this.ruleURL + \"/add-field\", fieldRule);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SyncService {\n\n  constructor(public http: HttpClient) {}\n\n  private headers =  new HttpHeaders().set('Content-Type', 'application/json');\n  private syncURL = environment.apiUrl + '/sync';\n\n  syncObservable(): Observable<Object> {\n    return this.http.get<Object>(this.syncURL)\n  }\n\n  getLastSyncObservable(): Observable<Object> {\n    return this.http.get<Object>(this.syncURL + \"/lastSync\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { Observable } from 'rxjs';\nimport { Type } from '../model/type';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TypeService {\n\n  constructor(public http: HttpClient) {}\n\n  private headers =  new HttpHeaders().set('Content-Type', 'application/json');\n  private typeURL = environment.apiUrl + '/type';\n\n  getTypesObservable(): Observable<Object> {\n    return this.http.get<Type[]>(this.typeURL)\n  }\n\n  insertTypeObservable(type: Type) : Observable<Object> {\n    return this.http.post<Object>(this.typeURL, type);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { Observable } from 'rxjs';\nimport { Document } from '../model/document';\nimport { ResultRule } from '../model/result-rule';\n// import { input } from '../model/input';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidatorService {\n\n  constructor(public http: HttpClient) {}\n\n  private headers =  new HttpHeaders().set('Content-Type', 'application/json');\n  private validatorURL = environment.apiUrl + '/validator';\n\n//   getvalidatorsObservable(): Observable<Object> {\n//     return this.http.get<validator[]>(this.validatorURL)\n//   }\n\n  insertValidatorObservable(document: Document) : Observable<ResultRule> {\n    return this.http.post<ResultRule>(this.validatorURL, document);\n  }\n\n}\n"],"sourceRoot":""}